* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
    min-height: 100vh;
    display: grid;
    grid-template-columns: repeat(9, 1fr);
    grid-template-rows: 50px auto 75px;
    grid-template-areas: 
            "hd hd hd hd hd hd hd hd hd"
            "mn mn mn mn mn mn mn sb sb"
            "ft ft ft ft ft ft ft ft ft";
    column-gap: 0.5rem;
}
.el {
    background-color: rebeccapurple;
    color: #fff;
    display: grid;
    place-content: center;
}

.header {
    grid-area: hd;
}

.sidebar {
    grid-area: sb;
    background-color: #00f;
}

.footer {
    grid-area: ft;
}
.container {
    grid-area: mn;
    min-height: 400px;
    display: grid;
    grid-template-columns: repeat(2, 1fr 2fr);
    grid-auto-rows: minmax(150px, auto);
    gap: 1rem;

}
/* CSS Grid is a powerful layout system that provides more control than Flexbox for two-dimensional layouts (both rows and columns). You define a grid with display: grid;, and you can specify the number of rows and columns using grid-template-rows and grid-template-columns. Items are then placed in specific grid areas using grid-row and grid-column. Grid is ideal for complex page layouts where precise control over both dimensions is needed. */




.box {
    background-color: black;
    color: #f1f1f1;
    font-size: 2rem;
    padding: 0.5rem;
}

.box:first-child  {
    background-color: blue;
    /* grid-column-start:1 ;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 3; */
    grid-area: 1 / 1 / 3 / 4;
    display: grid;
    /* align-content: center;
    justify-content: center; */
    place-content: end center;

}

.box:nth-child(2) {
    background-color: palevioletred;
    grid-column: 1 / 5;
    grid-row: 3 / 4;
}

/* CSS Grid is a powerful layout system that provides more control than Flexbox for two-dimensional layouts (both rows and columns). You define a grid with display: grid;, and you can specify the number of rows and columns using grid-template-rows and grid-template-columns. Items are then placed in specific grid areas using grid-row and grid-column. Grid is ideal for complex page layouts where precise control over both dimensions is needed. */

